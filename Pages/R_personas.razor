@page "/persona"
@page "/persona/{PersonaId:int}"



<EditForm Model="persona" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card">
        <div class="card-header">
            <h3>Registro de Personas</h3>
        </div>
        <div class="card-body">
            @*PersonaId*@
            <div class="form-r ow align-items-center">
                <div class="col">
                    <div class="form-group">
                        <label>PersonaId</label>
                        <div class="input-group">
                            <InputNumber @bind-Value="persona.PersonaId" class="form-control col-4" />
                            <div class="input-group-append">
                                
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @*NombreCompleto*@
            <div class="form-group">
                <label>Nombre Completo</label>
                <InputText @bind-Value="persona.NombreCompleto" class="form-control" />
                <ValidationMessage For="@(() => persona.NombreCompleto)" />
            </div>

            @*Telefono*@
            <div class="form-group">
                <label>Telefono</label>
                <InputNumber @bind-Value="persona.Telefono" class="form-control" />
                <ValidationMessage For="@(() => persona.Telefono)" />
            </div>
        </div>
        <h1>
            <span class="text-danger">@mensaje</span>
        </h1>

        @*Celular*@
            <div class="form-group">
                <label>Celular</label>
                <InputNumber @bind-Value="persona.Celular" class="form-control" />
                <ValidationMessage For="@(() => persona.Celular)" />
            </div>
        </div>
        <h1>
            <span class="text-danger">@mensaje</span>
        </h1>

        @*Email*@
            <div class="form-group">
                <label>Email</label>
                <InputText @bind-Value="persona.Email" class="form-control" />
                <ValidationMessage For="@(() => persona.Email)" />
            </div>

        @*Direccion*@
            <div class="form-group">
                <label>Direccion</label>
                <InputText @bind-Value="persona.Direccion" class="form-control" />
                <ValidationMessage For="@(() => persona.Direccion)" />
            </div>

        @*FechaNacimiento*@
            <div class="form-group">
                <label>Fecha De Nacimiento</label>
                <InputDate @bind-Value="persona.FechaNacimiento" class="form-control" />
                <ValidationMessage For="@(() => persona.FechaNacimiento)" />
            </div>

            @*OcupacionId*@
            <div class="form-r ow align-items-center">
                <div class="col">
                    <div class="form-group">
                        <label>OcupacionId</label>
                        <div class="input-group">
                            <InputNumber @bind-Value="persona.OcupacionId" class="form-control col-4" />
                            <div class="input-group-append">
                               
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        


        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>
                <button type="submit" class="btn btn-lg btn-success">Guardar</button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>
                
            </div>
        </div>
    @* </div> *@
</EditForm>

@code {
    [Parameter]
    public int PersonaId { get; set; }

    public Personas persona  = new Personas();

    public String mensaje { get; set; } = "";

protected override void OnInitialized()
    {
        if (PersonaId > 0)
        {
            this.persona.PersonaId = PersonaId;
        }
    }
 public void Nuevo()
    {
        mensaje = "";
        persona = new Personas();
    }

bool Validar()
    {
        return persona.NombreCompleto.Contains(".");
    }
public void Guardar()
    {
        bool guardo;


        if (!Validar())
        {
            mensaje = "hay errores, favor corregir";
            return;
        }

        guardo = PersonasBLL.Guardar(persona);

        if (guardo)
        {
            Nuevo();
        }
        
    }
 public  void Eliminar()
    {
        bool elimino;

        elimino = PersonasBLL.Eliminar(PersonaId);

        if (elimino)
        {
            Nuevo();
        }
      
    }

}